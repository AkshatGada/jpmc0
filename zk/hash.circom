pragma circom 2.1.6;

include "circomlib/poseidon.circom";
include "circomlib/mimcsponge.circom";
// include "https://github.com/0xPARC/circom-secp256k1/blob/master/circuits/bigint.circom";

template Example (n) {
    signal input a[n];
    signal output inputHash[1];
    component mimcInput = MiMCSponge(n, 220, 1);
    for (var i = 0; i < n; i++) {
        mimcInput.ins[i] <== a[i];
    }
    mimcInput.k <== 0;
    inputHash <== mimcInput.outs;
}

component main = Example(28);

/* INPUT = {
     "a": [
    -90963955397368420000,
    -27081010918040256000,
    -81938226742332980000,
    172917629870647040000,
    -19799020585150988000,
    6106563436047160000,
    -26632661281440090000,
    -46678770154833870000,
    -51689195387195784000,
    -86004826907563090000,
    100751739566497800000,
    -126485359558309730000,
    -25609940840449120000,
    -163781517741377900000,
    -37296195569623560000,
    -14959842158272010000,
    5172668901915389000,
    -14366683706228054000,
    -26927202017420416000,
    -70436737214380744000,
    -16356868370395658000,
    52250663613828690000,
    -1988761372789447000,
    -10889735236754978000,
    -28976992389776492000,
    -35096314201433816000,
    -54972865916137130000,
    27655875535093500000
  ]
    
} */